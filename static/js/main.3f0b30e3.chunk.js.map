{"version":3,"sources":["Components/AddForm.js","Components/Contacts.js","Components/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","AddForm","contacts","setContacts","useState","name","setName","number","setNumber","handleInputField","target","value","className","onSubmit","evt","preventDefault","toLowerCase","alert","prevState","id","nanoid","type","pattern","title","onChange","required","Contacts","filteredArray","deleteContact","handleClick","e","dataset","length","map","el","style","color","onClick","Filter","filter","App","setFilter","arr","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f0b30e3.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nconst AddForm = ({ contacts, setContacts }) => {\r\n  const [name, setName] = useState(INITIAL_STATE.name);\r\n  const [number, setNumber] = useState(INITIAL_STATE.number);\r\n\r\n  const handleInputField = ({ target }) =>\r\n    target.name === 'number' ? setNumber(target.value) : setName(target.value);\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    for (const contact of contacts) {\r\n      if (contact.name.toLowerCase() === name.toLowerCase()) {\r\n        alert(`${name} is already in contacts`);\r\n        return;\r\n      }\r\n    }\r\n    setContacts(prevState => [...prevState, { id: nanoid(), name, number }]);\r\n    setName(INITIAL_STATE.name);\r\n    setNumber(INITIAL_STATE.number);\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <label className=\"labelNameField\">\r\n        <span className=\"titleNameField\">Name</span>\r\n        <input\r\n          type=\"text\"\r\n          className=\"nameField\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\"\r\n          value={name}\r\n          onChange={handleInputField}\r\n          required\r\n        />\r\n      </label>\r\n      <label className=\"labelNumberField\">\r\n        <span className=\"titleNumberField\">Number</span>\r\n        <input\r\n          type=\"tel\"\r\n          className=\"numberField\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          value={number}\r\n          onChange={handleInputField}\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"addButton\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import { BsPersonCircle } from 'react-icons/bs';\r\n\r\nconst Contacts = ({ contacts, filteredArray, deleteContact }) => {\r\n  const handleClick = e => deleteContact(e.target.dataset.id);\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.length > 0 &&\r\n        filteredArray(contacts).map(el => (\r\n          <li key={el.id} className=\"listItem\">\r\n            <BsPersonCircle style={{ color: '#000099' }} /> -{' '}\r\n            <span>{el.name}</span>: <span>{el.number}</span>\r\n            <button\r\n              type=\"button\"\r\n              data-id={el.id}\r\n              className=\"deleteButton\"\r\n              onClick={handleClick}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","const Filter = ({ filter, handleInputField }) => {\r\n  return (\r\n    <label className=\"labelFilterField\">\r\n      <span className=\"titleFilterField\">Find contacts by Name:</span>\r\n      <input\r\n        type=\"text\"\r\n        className=\"filterField\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\"\r\n        value={filter}\r\n        onChange={handleInputField}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState } from 'react';\nimport AddForm from './Components/AddForm';\nimport Contacts from './Components/Contacts';\nimport Filter from './Components/Filter';\nimport './App.css';\n\nconst INITIAL_STATE = {\n  contacts: [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  filter: '',\n};\n\nfunction App() {\n  const [contacts, setContacts] = useState(INITIAL_STATE.contacts);\n  const [filter, setFilter] = useState(INITIAL_STATE.filter);\n\n  const handleInputField = ({ target }) => setFilter(target.value);\n\n  const filteredArray = arr =>\n    arr.filter(el => el.name.toLowerCase().includes(filter.toLowerCase()));\n\n  const deleteContact = id => {\n    setContacts(prevState => prevState.filter(el => el.id !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>PhoneBook</h1>\n      <h3>Add new contact</h3>\n      <AddForm contacts={contacts} setContacts={setContacts} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} handleInputField={handleInputField} />\n      <Contacts\n        contacts={contacts}\n        filteredArray={filteredArray}\n        deleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}